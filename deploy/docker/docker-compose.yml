name: go-password-keeper

services:
  server:
    container_name: server
    image: filatik/go-password-keeper/server:dev
    labels: 
      co.elastic.logs/enabled: "true"
    build:
      context: ../.. # root with sources (go.mod, cmd/)
      dockerfile: deploy/docker/Dockerfile.server
    restart: unless-stopped
    environment:
      - SERVER_ADDRESS=:8080
    ports:
      - "${SERVER_HOST_PORT}:8080"

  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-latest}
    container_name: prometheus
    ports:
      - ${PROMETHEUS_PORT_EXTERNAL}:9090
    command:
      - '--config.file=/usr/share/prometheus/prometheus.yml'
    volumes:
      - ./prometheus:/usr/share/prometheus/
    restart: unless-stopped

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION:-latest}
    hostname: grafana
    container_name: grafana
    ports:
      - ${GRAFANA_PORT_EXTERNAL}:3000
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped

  redis:
    image: redis:${REDIS_VERSION:-latest}
    hostname: redis
    container_name: redis
    ports:
      - ${REDIS_PORT_EXTERNAL}:6379
    volumes:
      - ./data/redis:/data
    environment:
      ALLOW_EMPTY_PASSWROD: yes
      REDIS_REPLICATION_MODE: master
    restart: unless-stopped
  
  redis-exporter:
    image: oliver006/redis_exporter:${REDIS_EXPORTER_VERSION:-latest}
    hostname: redis-exporter
    container_name: redis-exporter
    ports:
      - ${REDIS_EXPORTER_PORT_EXTERNAL}:9121
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      - redis

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"     # REST API
    volumes:
      - ./data/elk/elasticsearch:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9200 >/dev/null || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 20

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.2
    container_name: logstash
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"     # Beats input (Filebeat/Logstash-Beats)
      - "9600:9600"     # Logstash monitoring API
    volumes:
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./data/elk/logstash:/usr/share/logstash/data
    environment:
      - LS_JAVA_OPTS=-Xms256m -Xmx256m
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9600/_node >/dev/null || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 20

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"     # Kibana UI
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5601/api/status >/dev/null || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 20

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.12.2
    container_name: filebeat
    user: root
    depends_on:
      - logstash
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./elk/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    command: ["-e", "--strict.perms=false"]
